package com.sda.lombok.sample;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

import javax.persistence.*;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

@ToString
@NoArgsConstructor
@Entity(name = "Sample")
@Table(name = "sample")
public class SampleEntity {

    @Getter
    @Setter
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Getter
    @Setter
    private String title;

    @Getter
    @Setter
    private String author;

    @Getter
    @Setter
    private LocalDate published;

    @ToString.Exclude
    private List<SampleChild> children = new ArrayList<>();

    public static void main(String[] args) {
        SampleEntity sampleEntity = new SampleEntity();
        sampleEntity.setTitle("title");
        sampleEntity.setAuthor("author");
        sampleEntity.setPublished(LocalDate.now());

        SampleChild sampleChild = new SampleChild();
        sampleChild.setAge(10);

        sampleEntity.addChild(sampleChild);
        System.out.println(sampleEntity);
    }

    // don't override @Hashcode @Equals on entities

    public void addChild(SampleChild child) {
        this.children.add(child);
    }

    // if id is generated by db, implement equals just by comparing id
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        SampleEntity paper = (SampleEntity) o;
        return Objects.equals(id, paper.id);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }
}
